{"version":3,"sources":["modules/Preview/index.js","modules/Markdown/Markdown.component.js","modules/VerticalHandler/index.js","utils/api.js","Editor/Editor.component.js","Search/Search.component.js","View/View.component.js","App.js","serviceWorker.js","index.js"],"names":["markdown","width","className","style","source","setMarkdown","onChange","e","value","target","setViewWidths","onDrag","event","screenWidth","window","outerWidth","mousePosition","clientX","left","Math","round","right","toJSON","response","ok","Error","statusText","json","ROOT","getMarkdown","docId","fetch","then","props","useState","viewWidths","onClick","body","options","method","JSON","stringify","content","saveMarkdownFiles","history","push","id","VerticalHandler","Preview","linkStyle","position","top","Item","searchTerm","match","RegExp","start","index","end","length","title","preview","substring","to","Search","searchResults","setResults","setTerm","Button","variant","Form","onSubmit","preventDefault","searchMarkdown","document","getElementById","results","Group","controlId","Container","marginTop","Row","Col","Label","height","fill","xmlns","d","Control","console","log","type","placeholder","map","result","key","bannerStyle","editStyle","View","useEffect","a","fetchMarkdown","path","render","params","App","exact","component","Boolean","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d010fe86.chunk.js","sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './style.scss';\n\nexport default ({markdown, width}) => (\n  <div className=\"preview__wrapper\" style={{width: width ? width + '%' : '100%'}}>\n    <ReactMarkdown source={markdown} />\n  </div>\n)","import React from 'react';\n\nexport default ({markdown, setMarkdown, width}) => {\n  const handleChange = function(e) {\n    const { value } = e.target;\n    setMarkdown(value);\n  };\n  return (\n    <textarea className=\"editor__markdown\"  \n      style={{width: width + '%'}} \n      onChange={handleChange}\n      value={markdown}\n    >\n    </textarea>\n  )\n};","import React from 'react';\n\nexport default ({setViewWidths}) => {\n  const handleDrag = function(event) {\n    const available = 98;\n    const screenWidth = window.outerWidth;\n    const mousePosition = event.clientX;\n    if(mousePosition === 0) return;\n    const left = Math.round(mousePosition/screenWidth * 100);\n    setViewWidths({left, right: available - left});\n  }\n  return (\n  <div onDrag={handleDrag} className=\"editor__vertical-handler\"></div>\n)};","//const ES_API = \"somewhereongoogle.com\";\nimport projectPage from '../mock/projectpage';\n\nfunction toJSON(response) {\n  // why do this: https://www.tjvantoll.com/2015/09/13/fetch-and-errors/\n  if(!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response.json();\n}\n\nconst ROOT = 'http://localhost:4040';\n\nexport function saveMarkdownFiles(body) {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      content: body\n    })\n  }\n  return fetch(ROOT +'/createinfopost', options).then(toJSON)\n}\n\nexport function getMarkdown(docId) {\n  return fetch(ROOT + '/getinfopostbyid?id=' + docId).then(toJSON);\n}\n\nexport function searchMarkdown(searchTerm) {\n  return fetch(ROOT + '/searchterm?search=' + searchTerm).then(toJSON);\n}\n","import React, {useState, useEffect} from 'react';\nimport {\n  Markdown, \n  VerticalHandler, \n  Preview\n} from '../modules';\nimport { saveMarkdownFiles, getMarkdown } from '../utils/api'; \nimport './styles.scss';\n\nexport default (props) => {\n  const [markdown, setMarkdown] = useState(props.markdown);\n  const [viewWidths, setViewWidths] = useState({left: 49, right: 49});\n\n  const publish = function() {\n    saveMarkdownFiles(markdown).then(response => {\n      props.history.push('/view/' + response.id)\n    });\n  }\n\n  return (\n    <div className=\"editor\">\n      <button style={{left: viewWidths.left - 6 + '%'}} onClick={publish}>Publish</button>\n      {/* setting inline style. Eventually these will be set by a drag handler on the verticalhandler */}\n      <Markdown {...{markdown, setMarkdown}} width={viewWidths.left}/>\n      <VerticalHandler {...{setViewWidths}}/>\n      <Preview {...{markdown}} width={viewWidths.right}/>\n    </div>\n  );\n}","import React, { useState, Component } from 'react';\nimport {Form, Container, Row, Col, Button, ListGroup} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport { searchMarkdown } from '../utils/api.js';\n\nconst linkStyle = {position: 'absolute', top: '20px', right: '20px'}\n\nconst Item = ({id, content, searchTerm}) => {\n  const match = content.match(new RegExp(searchTerm, 'i'))\n  const start = match.index - 25;\n  const end = match.index + searchTerm.length + 25;\n  const title = content.match(new RegExp('(?<=\\\\n#)(.*?)(?=\\\\n)'))[0];\n  const preview = content.substring(start, end);\n  return (\n    <li>\n    <Link to={`/view/${id}`}>\n      <h1>{title}</h1>\n      <p>{preview}</p>\n    </Link>\n  </li>\n  )\n};\n\nfunction Search () {\n  const [searchResults, setResults] = useState([]);\n  const [searchTerm, setTerm] = useState('');\n  const search = (event) => {\n    event.preventDefault();\n    const searchTerm = document.getElementById('searchTerm').value;\n    searchMarkdown(searchTerm).then((results) => {\n      setResults(results);\n    })\n  }\n\n  const handleChange = (event) => {\n    const {value} = event.target;\n    setTerm(value);\n    console.log(searchTerm)\n  }\n\n  return (\n    <>\n      <Link style={linkStyle} to=\"/new\"><Button variant=\"outline-info\">Add New</Button></Link>\n      <Form onSubmit={search}>\n        <Form.Group controlId=\"searchTerm\">\n          <Container style={{width: '300px', marginTop: '20vh'}} >\n            <Row className=\"justify-content-center text-center\">\n              <Col>\n                <Form.Label><h1 className=\"mb-5\"><svg width=\"300\" height=\"71\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><title>Wikied</title><path d=\"M67.351 29.2l-4.688.625-9.72 39.826H42.45l-8.645-28.754h-.258l-8.644 28.754H14.45L4.688 29.825 0 29.2v-7.858h21.074V29.2l-4.946.982 4.387 22.1h.258l8.688-30.94h8.43l8.773 31.03h.258l4.344-22.145-4.99-1.027v-7.858h21.075V29.2zM71.265 61.837l6.064-1.34V30.54l-6.71-1.34v-7.857h19.268v39.156l6.022 1.34v7.813H71.264v-7.814zm18.622-52.06H77.33V0h12.558v9.778zM98.704 7.858V0h19.225v40.362h2.795l7.226-10.582-4.086-.58v-7.858h22.88V29.2l-5.505 1.294-8.386 11.966 11.741 18.35 4.774 1.027v7.814h-21.504v-7.814l2.58-.446-7.139-11.966h-5.376v11.073l5.419 1.34v7.813H99.349v-7.814l6.064-1.34v-51.3l-6.709-1.339zM153.411 61.837l6.064-1.34V30.54l-6.71-1.34v-7.857h19.268v39.156l6.021 1.34v7.813h-24.643v-7.814zm18.622-52.06h-12.558V0h12.558v9.778zM204.461 70.588c-6.709 0-12.071-2.232-16.085-6.697-4.014-4.465-6.021-10.135-6.021-17.01v-1.787c0-7.173 1.892-13.081 5.677-17.725 3.814-4.643 8.917-6.95 15.311-6.92 6.279 0 11.154 1.964 14.623 5.893 3.469 3.93 5.204 9.242 5.204 15.94v7.099h-27.783l-.086.267c.229 3.185 1.247 5.805 3.053 7.858 1.835 2.054 4.315 3.081 7.441 3.081 2.781 0 5.089-.283 6.924-.848 1.835-.595 3.842-1.518 6.021-2.768l3.398 8.036c-1.921 1.578-4.416 2.902-7.484 3.974-3.039 1.072-6.437 1.607-10.193 1.607zm-1.118-40.093c-2.322 0-4.157.922-5.505 2.768-1.347 1.845-2.179 4.27-2.494 7.277l.129.224h15.397v-1.161c0-2.769-.631-4.971-1.893-6.608-1.233-1.667-3.111-2.5-5.634-2.5zM259.426 63.757c-1.462 2.233-3.197 3.93-5.204 5.09-1.978 1.16-4.244 1.741-6.795 1.741-5.735 0-10.193-2.173-13.376-6.518-3.154-4.346-4.731-10.09-4.731-17.234v-.938c0-7.62 1.591-13.766 4.774-18.44 3.183-4.673 7.656-7.01 13.419-7.01 2.322 0 4.415.537 6.279 1.608 1.864 1.042 3.498 2.53 4.903 4.465V9.197l-6.709-1.339V0h19.267v60.498l6.021 1.34v7.813h-16.902l-.946-5.894zm-17.547-16.921c0 4.226.673 7.56 2.021 10 1.376 2.412 3.613 3.617 6.709 3.617 1.835 0 3.427-.387 4.774-1.16 1.348-.775 2.452-1.89 3.312-3.35V35.45c-.86-1.547-1.964-2.738-3.312-3.571-1.319-.864-2.881-1.295-4.688-1.295-3.068 0-5.304 1.414-6.709 4.241-1.405 2.828-2.107 6.519-2.107 11.073v.938zM300 60.507c0 5.05-3.944 9.144-8.808 9.144-4.865 0-8.808-4.094-8.808-9.144s3.943-9.144 8.808-9.144c4.864 0 8.808 4.094 8.808 9.144z\" fill=\"#055EA9\"/></svg></h1></Form.Label>\n              </Col>\n            </Row>\n            <Row className=\"justify-content-sm-center\">\n              <Col>\n                <Form.Control onChange={handleChange} value={searchTerm} type=\"input\" placeholder=\"Search\"></Form.Control>\n              </Col>\n            </Row>\n          </Container>\n        </Form.Group>\n      </Form>\n      {!!searchResults.length &&\n        <ul className=\"list-unstyled pl-0\">\n          {searchResults.map(result => <Item key={result.id} {...result} searchTerm={searchTerm} />)}\n        </ul>\n      }\n    </>\n  )\n}\n\nexport default Search;","import React, {useState, useEffect} from 'react';\nimport Preview from '../modules/Preview';\nimport Editor from '../Editor';\nimport {Switch, Route, Link} from 'react-router-dom';\nimport {Button} from 'react-bootstrap';\nimport { getMarkdown } from '../utils/api';\n\nconst bannerStyle = {height: '80px'};\nconst linkStyle = {position: 'absolute', left: '20px', top: '20px'};\nconst editStyle = {position: 'absolute', right: '20px', top: '20px'};\n\nfunction View(props) {\n  const [markdown, setMarkdown] = useState('');\n  const { docId } = props;\n  useEffect(() => {\n    const fetchMarkdown = async () => {\n      const {content} = await getMarkdown(docId);\n      setMarkdown(content);\n    }\n    if(!markdown) {\n      if(docId) {\n        fetchMarkdown();\n      }\n    }\n  }, [markdown, docId])\n\n  return (\n    <>\n      <div style={bannerStyle}>\n        <Link style={linkStyle} to=\"/\"><Button variant=\"outline-info\">{`< Back to Search`}</Button></Link>\n      </div>\n      <Switch>\n        <Route path=\"/view/:docId/edit\" render={({match}) => (\n          <Editor markdown={markdown} />\n        )} />\n        <Route path=\"/view/:docId\" render={({match}) => (\n          <>\n            <Link style={editStyle} to={`/view/${match.params.docId}/edit`}><Button variant=\"outline-primary\">{`Edit`}</Button></Link>\n            <Preview markdown={markdown} />\n          </>\n          \n        )} />\n      </Switch>\n    </>\n  )\n}\n\nexport default View;\n","import React from 'react';\nimport Editor from './Editor';\nimport Search from './Search';\nimport View from './View';\nimport {Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/new\" render={(props) => {\n        return <Editor markdown='# Add Markdown Here' {...props} />\n      }}/>\n      <Route path=\"/view/:docId\" render={({match}) => (\n        <View docId={match.params.docId} />\n      )} />\n      <Route exact path=\"/\" component={Search} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}